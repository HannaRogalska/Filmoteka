{"mappings":"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","sources":["src/library.js","src/JS/modal-library.js"],"sourcesContent":["import './JS/students-modal';\nimport './JS/spinner';\nimport './JS/video';\nimport './sass/main.scss';\nimport './JS/modal-library';\n\nconst watchedButton = document.querySelector('.btn-watched');\nconst queuedButton = document.querySelector('.btn-queue');\n\nconst main = document.querySelector('.library');\n\nconst watchedKey = 'watched';\nconst queueKey = 'queue';\n\nconst getMovieForLibrary = async id => {\n  const url = `https://api.themoviedb.org/3/movie/${id}?api_key=28f50cf3f177782503c21b43af04c7bc`;\n  try {\n    const resp = await fetch(url);\n    const data = await resp.json();\n    return data;\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nconst createLibraryMovieTemplateHTML = (image, id, title, genres, year, rating) => {\n  return `<li class=\"movie__template\">\n    <img class=\"movie__image\" id=\"${id}\" src=\"${image}\" alt='${title}' width=\"280px\" height=\"398px\"/>\n    <h5 class=\"movie__title\">${title}</h5>\n    <div class=\"movie__informations\"><span>${genres}</span> | <span>${year}</span>\n    <span class=\"movie__rating\">${rating}</span></div>\n  </li>`;\n};\n\nconst searchPoster = movie => {\n  let posterPath = movie.poster_path ? movie.poster_path : movie.backdrop_path;\n  if (posterPath === null) {\n    return 'https://images.pexels.com/photos/5721902/pexels-photo-5721902.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2';\n  } else {\n    return `https://image.tmdb.org/t/p/original${posterPath}`;\n  }\n};\n\nconst createLibraryMovieTemplate = async ids => {\n  const moviesList = await Promise.all(\n    ids.map(async id => {\n      const movie = await getMovieForLibrary(id);\n      const image = searchPoster(movie);\n      const title = movie.title ? movie.title : movie.name;\n      const movieDate = movie.release_date ? movie.release_date : movie.first_air_date;\n      const year = new Date(movieDate).getFullYear();\n      const rating = movie.vote_average.toFixed(1);\n      const genres = movie.genres[0].name;\n      console.log(genres);\n      return createLibraryMovieTemplateHTML(image, id, title, genres, year, rating);\n    }),\n  );\n  main.innerHTML = moviesList.join('');\n};\n\nconst loadWatchedLibrary = key => {\n  try {\n    const state = localStorage.getItem(key);\n    const array = JSON.parse(state);\n    if (array === null) {\n      return;\n    } else {\n      createLibraryMovieTemplate(array);\n      console.log('array:', array);\n    }\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nloadWatchedLibrary(watchedKey);\n\nwatchedButton.addEventListener('click', () => {\n  loadWatchedLibrary(watchedKey);\n});\n\nqueuedButton.addEventListener('click', () => {\n  loadWatchedLibrary(queueKey);\n});\n\n//import './sass/main.scss';\nimport './JS/students-modal';\n","import Notiflix from 'notiflix';\nimport { watched, queued, saveWatched, saveQueued } from './watched&queue';\n\nconst url =\n  'https://api.themoviedb.org/3/trending/all/week?api_key=28f50cf3f177782503c21b43af04c7bc';\n\nconst close = document.querySelector('.close_modal_window');\nconst modal = document.querySelector('.modal_window');\nconst main = document.querySelector('main');\nconst innerModal = document.querySelector('.modal_inner');\n\nconst modalLibrary = document.querySelector('.modal_content');\n\nfunction onCloseModal() {\n  modal.classList.add('is-hidden');\n  innerModal.innerHTML = '';\n  document.body.classList.remove('stop-scrolling');\n}\nfunction onCloseModalEscKey(e) {\n  if (e.code === 'Escape') {\n    onCloseModal();\n    modal.removeEventListener('click', onCloseModal);\n    document.body.classList.remove('stop-scrolling');\n  }\n}\n\nmain.addEventListener('click', onShowModal);\nclose.addEventListener('click', onCloseModal);\ndocument.body.addEventListener('keydown', onCloseModalEscKey);\ndocument.body.addEventListener('click', onCloseModalClick);\n\nasync function onShowModal(e) {\n  e.preventDefault();\n  if (!e.target.classList.contains('movie__image')) {\n    return;\n  } else {\n    modal.classList.remove('is-hidden');\n    const selectedMovieId = e.target.id;\n    getMovie(selectedMovieId);\n    document.body.classList.add('stop-scrolling');\n  }\n}\n\nfunction onCloseModalClick(e) {\n  if (e.target === modal) {\n    onCloseModal();\n    document.body.classList.remove('stop-scrolling');\n    modal.removeEventListener('click', onCloseModal);\n  }\n}\n\nasync function getMovie(movieId) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=28f50cf3f177782503c21b43af04c7bc`,\n    );\n    const movieInformation = await response.json();\n    getMovieAndUpdateUI(movieInformation);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function getMovieAndUpdateUI(movie) {\n  try {\n    const { desktop, tablet, mobile } = `https://image.tmdb.org/t/p/original${movie.poster_path}`;\n    const modalMarkup = `\n      <div class=\"modalMarkup trailer__picture\">\n         <picture>\n            <source src= ${desktop} media=\"(min-width: 1200px)\">\n            <source src= ${tablet} media=\"(min-width: 768px)\">\n            <source src= ${mobile} media=\"(min-width: 320px)\">\n            <img src= https://image.tmdb.org/t/p/original${movie.poster_path} \n            alt=${movie.title} \n            id =${movie.id} class=\"modal__img\">\n        </picture>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" \n        width=\"70px\" height=\"70px\" \n        class=\"modal__svg\" \n        id=${movie.id}\n        viewBox=\"0 0 16 16\">\n         <path \n         id=${movie.id} d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n         <path\n         id=${\n           movie.id\n         } d=\"M6.271 5.055a.5.5 0 0 1 .52.038l3.5 2.5a.5.5 0 0 1 0 .814l-3.5 2.5A.5.5 0 0 1 6 10.5v-5a.5.5 0 0 1 .271-.445z\"/>\n        </svg>\n      </div>\n      <div class=\"modal__content-movie \">\n\n\n        <p class=\"modal__title\">${movie.title}</p>\n        <div class=\"modal__box\">\n          <div class=\"film-features\">\n            <p class=\"film-features__text\">Vote / Votes</p>\n            <p class=\"film-features__text\">Popularity</p>\n            <p class=\"film-features__text\">Original Title</p>\n            <p class=\"film-features__text\">Genre</p>\n          </div>\n          <div class=\"film-values\">\n            <p class=\"film-values__text\">\n              <span class=\"film-values__vote film-values__vote--color\">${movie.vote_average}</span>\n              <span class=\"film-values__slash\">/</span>\n              <span class=\"film-values__vote film-values__votes--color\">${movie.vote_count}</span>\n            </p>\n            <p class=\"film-values__text\">\n              <span class=\"film-value__vote\">${movie.popularity.toFixed(1)}</span>\n            </p>\n            <p class=\"film-values__text\">\n              <span class=\"film-values__vote\">${movie.original_title}</span>\n            </p>\n            <p class=\"film-values__text\">\n              <span class=\"film-values__vote\">${movie.genres[0].name}</span>\n            </p>\n          </div>\n        </div>\n        <div class=\"modal__description\">\n          <p class=\"modal__about\">About</p>\n          <p class=\"modal__text\">${movie.overview}</p>\n        </div>\n        <div class=\"modal__btn-box\">\n          <button \n          class=\"modal__btn modal__btn--removeWatched\" \n          id=\"${movie.id}\" type=\"button\" >Remove from watched</button>\n          <button \n          class=\"modal__btn modal__btn--removeQueued\"\n          id=\"${movie.id}\" type=\"button\" >Remove from queue</button>\n\n        </div>\n      </div>`;\n\n    innerModal.insertAdjacentHTML('beforeend', modalMarkup);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nconst removeFromWatched = id => {\n  if (!watched.includes(id)) {\n    Notiflix.Notify.info('You allready removed this movie from watched.');\n  } else {\n    const index = watched.indexOf(id);\n    watched.splice(index, 1);\n    try {\n      saveWatched();\n      Notiflix.Notify.success('Succesfully removed from watched.');\n    } catch (error) {\n      console.error(error.message);\n      Notiflix.Notify.failure('Something went wrong. Please, try again later.');\n    }\n  }\n};\n\nconst removeFromQueue = id => {\n  if (!queued.includes(id)) {\n    Notiflix.Notify.info('You allready removed this movie from queued.');\n  } else {\n    const index = queued.indexOf(id);\n    queued.splice(index, 1);\n    try {\n      saveQueued();\n      Notiflix.Notify.success('Succesfully removed from watched.');\n    } catch (error) {\n      console.error(error.message);\n      Notiflix.Notify.failure('Something went wrong. Please, try again later.');\n    }\n  }\n};\n\nconst removeFromLocalStorage = e => {\n  const movieId = e.target.id;\n  if (e.target.classList.contains('modal__btn--removeWatched')) {\n    removeFromWatched(movieId);\n  } else if (e.target.classList.contains('modal__btn--removeQueued')) {\n    removeFromQueue(movieId);\n  } else {\n    return;\n  }\n};\n\nmodalLibrary.addEventListener('click', removeFromLocalStorage);\n"],"names":["parcelRequire","$7IoHk","$6a2bdc1fa9ec1359$var$close","document","querySelector","$6a2bdc1fa9ec1359$var$modal","$6a2bdc1fa9ec1359$var$main","$6a2bdc1fa9ec1359$var$innerModal","$6a2bdc1fa9ec1359$var$modalLibrary","$6a2bdc1fa9ec1359$var$onCloseModal","classList","add","innerHTML","body","remove","addEventListener","async","e","preventDefault","target","contains","movieId","response","fetch","movie","desktop","tablet","mobile","poster_path","modalMarkup","title","id","vote_average","vote_count","popularity","toFixed","original_title","genres","name","overview","insertAdjacentHTML","console","log","$6a2bdc1fa9ec1359$var$getMovieAndUpdateUI","json","error","$6a2bdc1fa9ec1359$var$getMovie","code","removeEventListener","$zSg4k","watched","includes","index","indexOf","splice","saveWatched","$parcel$interopDefault","Notify","success","message","failure","info","$6a2bdc1fa9ec1359$var$removeFromWatched","queued","saveQueued","$6a2bdc1fa9ec1359$var$removeFromQueue","$9a8afeea60b9dfd3$var$watchedButton","$9a8afeea60b9dfd3$var$queuedButton","$9a8afeea60b9dfd3$var$main","$9a8afeea60b9dfd3$var$watchedKey","$9a8afeea60b9dfd3$var$createLibraryMovieTemplate","ids","moviesList","Promise","all","map","url","resp","$9a8afeea60b9dfd3$var$getMovieForLibrary","image","posterPath","backdrop_path","$9a8afeea60b9dfd3$var$searchPoster","movieDate","release_date","first_air_date","year","Date","getFullYear","rating","$9a8afeea60b9dfd3$var$createLibraryMovieTemplateHTML","join","$9a8afeea60b9dfd3$var$loadWatchedLibrary","key","state","localStorage","getItem","array","JSON","parse"],"version":3,"file":"libary.d6a44c04.js.map"}