{"mappings":"SAAA,MAAMA,EAAOC,SAASC,cAAc,QAkE9BC,EAAgBC,MAAMC,IAC1B,IACE,MAAMC,QAAiBC,MACrB,0FAEIC,QAAaF,EAASG,OACtBC,QAAmBF,EAAKG,OAC9B,GAAIN,EAAY,CACd,MAAMO,EAlBY,EAACJ,EAAMH,IACfG,EACXK,QAAOC,GAAKT,EAAWU,SAASD,EAAEE,MAClCC,KAAIH,GACIA,EAAEI,OAcKC,CAAgBT,EAAYL,GAC1C,OAAOO,CACT,CAGF,CAFE,MAAOQ,GACPC,QAAQC,IAAIF,EACd,GAO2BhB,WAC3B,IACE,MAAME,QAAiBC,MAJzB,0FAKQC,QAAaF,EAASG,OA7EAL,OAAMmB,IACpC,MAAMC,QAAmBC,QAAQC,IAC/BH,EAAON,KAAIb,MAAMuB,IACf,MAAMC,EAAQ,sCAAsCD,EAAME,cACpDC,EAAQH,EAAMG,MAAQH,EAAMG,MAAQH,EAAMT,KAC1Ca,EAAYJ,EAAMK,aAAeL,EAAMK,aAAeL,EAAMM,eAC5DC,EAAO,IAAIC,KAAKJ,GAAWK,cAC3BC,EAAmBV,EAAMW,UAE/B,MAlB8B,EAACV,EAAOE,EAAOnB,EAAQuB,IAElD,oEAC4BN,WAAeE,oEACrBA,sDAHXnB,EAAO4B,MAAM,EAAG,GAAGC,KAAK,wBAI6BN,0BAa5DO,CAA4Bb,EAAOE,QADrB3B,EAAckC,GACsBH,EAAA,KAG7DlC,EAAK0C,UAAYlB,EAAWgB,KAAK,KAmE/BG,OAD4BnC,EAAKoC,QAInC,CAFE,MAAOxB,GACPC,QAAQC,IAAIF,EACd,GAGFyB,GC/FA,MAGMC,EAAQ7C,SAASC,cAAc,uBAC/B6C,EAAQ9C,SAASC,cAAc,iBAC/B8C,EAAO/C,SAASC,cAAc,QACdD,SAASC,cAAc,oBAG7CmB,QAAQC,IAAI0B,GAEZF,EAAMG,iBAAiB,SAAS,KAC9BF,EAAMG,MAAMC,QAAU,UAGxBH,EAAKC,iBAAiB,SAEtB7C,eAA2BgD,GAEvBL,EAAMM,UAAUC,OAAO,aACzB,MAAMC,EAAgBH,EAAEI,OACxBnC,QAAQC,IAAIiC,GAKdnD,eAAmCmD,SAEX,EAAAE,EAAAC,oBAAmBH,GAEvCR,EAAMM,UAAUC,OAAO,YAiE3B,CAzEEK,CAAoBJ,EAEtB","sources":["src/JS/movie-template.js","src/JS/modal.js"],"sourcesContent":["const main = document.querySelector('main');\n\n//TWORZENIE SZABLONU FILMU NA STRONĘ GŁÓWNĄ\nconst createMainMovieTemplateHTML = (image, title, genres, year) => {\n  const twoGenres = genres.slice(0, 2).join(', ');\n  return `<li class=\"movie__template\">\n    <img class=\"movie__image\" src=\"${image}\" alt='${title}' width=\"280px\" height=\"398px\"/> \n    <h5 class=\"movie__title\">${title}</h5>\n    <div class=\"movie__informations\"><span>${twoGenres}</span> | <span>${year}</span></div>\n  </li>`;\n};\n\nconst createMainMovieTemplate = async movies => {\n  const moviesList = await Promise.all(\n    movies.map(async movie => {\n      const image = `https://image.tmdb.org/t/p/original${movie.poster_path}`;\n      const title = movie.title ? movie.title : movie.name;\n      const movieDate = movie.release_date ? movie.release_date : movie.first_air_date;\n      const year = new Date(movieDate).getFullYear();\n      const arrayOfGenresIds = movie.genre_ids;\n      const genres = await getGenresData(arrayOfGenresIds);\n      return createMainMovieTemplateHTML(image, title, genres, year);\n    }),\n  );\n  main.innerHTML = moviesList.join('');\n};\n\n//TWORZENIE SZABLONU FILMU DLA MY LIBRARY\n\n// const createLibraryMovieTemplateHTML = (image, title, genres, year, rating) => {\n//   const twoGenres = genres.slice(0, 2).join(', ');\n//   return `<li class=\"movie__template\">\n//     <img class=\"movie__image\" src=\"${image}\" alt='${title}' width=\"280px\" height=\"398px\"/>\n//     <h5 class=\"movie__title\">${title}</h5>\n//     <div class=\"movie__informations\"><span>${twoGenres}</span> | <span>${year}</span>\n//     <span class=\"movie__rating\">${rating}</span></div>\n//   </li>`;\n// };\n\n// const createLibraryMovieTemplate = async movies => {\n//   const moviesList = await Promise.all(\n//     movies.map(async movie => {\n//       const image = `https://image.tmdb.org/t/p/original${movie.poster_path}`;\n//       const title = movie.title ? movie.title : movie.name;\n//       const movieDate = movie.release_date ? movie.release_date : movie.first_air_date;\n//       const year = new Date(movieDate).getFullYear();\n//       const rating = movie.vote_average.toFixed(1);\n//       const arrayOfGenresIds = movie.genre_ids;\n//       const genres = await getGenresData(arrayOfGenresIds);\n//       return createLibraryMovieTemplateHTML(image, title, genres, year, rating);\n//     }),\n//   );\n//   main.innerHTML = moviesList.join('');\n// };\n\n//SZUKANIE nazwy gatunku filmu po jego ID\nconst searchIdForName = (data, arrayOfIds) => {\n  const names = data\n    .filter(d => arrayOfIds.includes(d.id))\n    .map(d => {\n      return d.name;\n    });\n  return names;\n};\n\n//FETCH listy gatunków filmów (id, name)\nconst getGenresData = async arrayOfIds => {\n  try {\n    const response = await fetch(\n      'https://api.themoviedb.org/3/genre/movie/list?api_key=28f50cf3f177782503c21b43af04c7bc',\n    );\n    const data = await response.json();\n    const genresData = await data.genres;\n    if (arrayOfIds) {\n      const names = searchIdForName(genresData, arrayOfIds);\n      return names;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//FETCH najpopularniejszych na dziś filmów\nconst url =\n  'https://api.themoviedb.org/3/trending/all/day?api_key=28f50cf3f177782503c21b43af04c7bc';\n\nconst getPopularMoviesData = async () => {\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    const popularMovies = await data.results;\n    createMainMovieTemplate(popularMovies);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\ngetPopularMoviesData();\n","import { createMovieFeature } from './movie-template';\n\nconst url =\n  'https://api.themoviedb.org/3/trending/all/week?api_key=28f50cf3f177782503c21b43af04c7bc';\n\nconst close = document.querySelector('.close_modal_window');\nconst modal = document.querySelector('.modal_window');\nconst main = document.querySelector('main');\nconst movieTemplate = document.querySelector('.movie__template');\n\n\nconsole.log(main);\n\nclose.addEventListener('click', () => {\n  modal.style.display = 'none';\n});\n\nmain.addEventListener('click', onShowModal);\n\nasync function onShowModal(e) {\n\n    modal.classList.remove('is-hidden');\n  const selectedMovie = e.target;\n  console.log(selectedMovie);\n  getMovieAndUpdateUI(selectedMovie);\n  \n}\n\nasync function getMovieAndUpdateUI(selectedMovie) {\n  try {\n    const movie = await createMovieFeature(selectedMovie);\n\n    modal.classList.remove('is-hidden');\n    //   const selectedMovie = e.target;\n    //   console.log(selectedMovie);\n  }\n\nasync function getMovieAndUpdateUI(numb) {\n    try {\n      const movie = await createMovieFeature(76600);\n\n      const { id, title, originalTitle, about, image, genres, popularity, vote, votes } =\n        movie.forMarkup;\n      const { desktop, tablet, mobile } = image;\n      const modalMarkup = `\n      <div class=\"modalMarkup trailer__picture\">\n         <picture>\n            <source srcset=${desktop} media=\"(min-width: 1200px)\">\n            <source srcset=${tablet} media=\"(min-width: 768px)\">\n            <source srcset=${mobile} media=\"(min-width: 320px)\">\n            <img src=${desktop} alt=${title} class=\"modal__img\">\n            <div class=\"trailer__btn\" data-id=\"${id}\">\n            <p class=\"trailer__text\">watch trailer</p>\n            </div>\n        </picture>\n      </div>\n      <div class=\"modal__content\">\n        <p class=\"modal__title\">${title}</p>\n        <div class=\"modal__box\">\n          <div class=\"film-features\">\n            <p class=\"film-features__text\">Vote / Votes</p>\n            <p class=\"film-features__text\">Popularity</p>\n            <p class=\"film-features__text\">Original Title</p>\n            <p class=\"film-features__text\">Genre</p>\n          </div>\n          <div class=\"film-values\">\n            <p class=\"film-values__text\">\n              <span class=\"film-values__vote film-values__vote--color\">${vote}</span>\n              <span class=\"film-values__slash\">/</span>\n              <span class=\"film-values__vote film-values__votes--color\">${votes}</span>\n            </p>\n            <p class=\"film-values__text\">\n              <span class=\"film-value__vote\">${popularity.toFixed(1)}</span>\n            </p>\n            <p class=\"film-values__text\">\n              <span class=\"film-values__vote\">${originalTitle}</span>\n            </p>\n            <p class=\"film-values__text\">\n              <span class=\"film-values__vote\">${genres}</span>\n            </p>\n          </div>\n        </div>\n        <div class=\"modal__description\">\n          <p class=\"modal__about\">About</p>\n          <p class=\"modal__text\">${about}</p>\n        </div>\n        <div class=\"modal__btn-box\" data-id=\"${id}\">\n          <button class=\"modal__btn modal__btn--watched\" type=\"button\">Add to watched</button>\n          <button class=\"modal__btn modal__btn--queue\" type=\"button\">Add to queue</button>\n        </div>\n      </div>`;\n\n      modal.insertAdjacentHTML('beforeend', modalMarkup);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n}\n\n"],"names":["$0324c45f15d03b16$var$main","document","querySelector","$0324c45f15d03b16$var$getGenresData","async","arrayOfIds","response","fetch","data","json","genresData","genres","names","filter","d","includes","id","map","name","$0324c45f15d03b16$var$searchIdForName","error","console","log","movies","moviesList","Promise","all","movie","image","poster_path","title","movieDate","release_date","first_air_date","year","Date","getFullYear","arrayOfGenresIds","genre_ids","slice","join","$0324c45f15d03b16$var$createMainMovieTemplateHTML","innerHTML","$0324c45f15d03b16$var$createMainMovieTemplate","results","$0324c45f15d03b16$var$getPopularMoviesData","$52c9fbd2920a6736$var$close","$52c9fbd2920a6736$var$modal","$52c9fbd2920a6736$var$main","addEventListener","style","display","e","classList","remove","selectedMovie","target","$0324c45f15d03b16$exports","createMovieFeature","$52c9fbd2920a6736$var$getMovieAndUpdateUI"],"version":3,"file":"index.338f940b.js.map"}