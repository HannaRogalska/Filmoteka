{"mappings":"AAAA,MAAMA,EAAgBC,SAASC,cAAc,gBACvCC,EAAeF,SAASC,cAAc,cAEtCE,EAAOH,SAASC,cAAc,YAE9BG,EAAa,UAgCbC,EAA6BC,MAAMC,IACvC,MAAMC,QAAmBC,QAAQC,IAC/BH,EAAII,KAAIL,MAAMM,IACZ,MAAMC,OAhCeP,OAAMM,IAC/B,MAAME,EAAM,sCAAsCF,6CAClD,IACE,MAAMG,QAAaC,MAAMF,GAEzB,aADmBC,EAAKE,MAI1B,CAFE,MAAOC,GACPC,QAAQC,MAAMF,EAChB,GAwBwBG,CAAmBT,GACjCU,EAbS,CAAAT,IACnB,IAAIU,EAAaV,EAAMW,YAAcX,EAAMW,YAAcX,EAAMY,cAC/D,OAAmB,OAAfF,EACK,kHAEA,sCAAsCA,GAAY,EAQzCG,CAAab,GACrBc,EAAQd,EAAMc,MAAQd,EAAMc,MAAQd,EAAMe,KAC1CC,EAAYhB,EAAMiB,aAAejB,EAAMiB,aAAejB,EAAMkB,eAC5DC,EAAO,IAAIC,KAAKJ,GAAWK,cAC3BC,EAAStB,EAAMuB,aAAaC,QAAQ,GACpCC,EAASzB,EAAMyB,OAAO,GAAGV,KAE/B,OADAT,QAAQoB,IAAID,GA5BqB,EAAChB,EAAOV,EAAIe,EAAOW,EAAQN,EAAMG,IAC/D,mEAC2BvB,WAAYU,WAAeK,mEAChCA,sDACcW,oBAAyBN,6CACpCG,0BAwBrBK,CAA+BlB,EAAOV,EAAIe,EAAOW,EAAQN,EAAMG,EAAA,KAG1EhC,EAAKsC,UAAYjC,EAAWkC,KAAK,KAG7BC,EAAqBC,IACzB,IACE,MAAMC,EAAQC,aAAaC,QAAQH,GAC7BI,EAAQC,KAAKC,MAAML,GACzB,GAAc,OAAVG,EACF,OAEA3C,EAA2B2C,GAC3B7B,QAAQoB,IAAI,SAAUS,EAI1B,CAFE,MAAO5B,GACPD,QAAQC,MAAMA,EAAM+B,QACtB,GAGFR,EAAmBvC,GAEnBL,EAAcqD,iBAAiB,SAAS,KACtCT,EAAmBvC,EAAA,IAGrBF,EAAakD,iBAAiB,SAAS,KACrCT,EAtEe,QAsEI","sources":["src/JS/library.js"],"sourcesContent":["const watchedButton = document.querySelector('.btn-watched');\nconst queuedButton = document.querySelector('.btn-queue');\n\nconst main = document.querySelector('.library');\n\nconst watchedKey = 'watched';\nconst queueKey = 'queue';\n\nconst getMovieForLibrary = async id => {\n  const url = `https://api.themoviedb.org/3/movie/${id}?api_key=28f50cf3f177782503c21b43af04c7bc`;\n  try {\n    const resp = await fetch(url);\n    const data = await resp.json();\n    return data;\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nconst createLibraryMovieTemplateHTML = (image, id, title, genres, year, rating) => {\n  return `<li class=\"movie__template\">\n    <img class=\"movie__image\" id=\"${id}\" src=\"${image}\" alt='${title}' width=\"280px\" height=\"398px\"/>\n    <h5 class=\"movie__title\">${title}</h5>\n    <div class=\"movie__informations\"><span>${genres}</span> | <span>${year}</span>\n    <span class=\"movie__rating\">${rating}</span></div>\n  </li>`;\n};\n\nconst searchPoster = movie => {\n  let posterPath = movie.poster_path ? movie.poster_path : movie.backdrop_path;\n  if (posterPath === null) {\n    return 'https://images.pexels.com/photos/5721902/pexels-photo-5721902.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2';\n  } else {\n    return `https://image.tmdb.org/t/p/original${posterPath}`;\n  }\n};\n\nconst createLibraryMovieTemplate = async ids => {\n  const moviesList = await Promise.all(\n    ids.map(async id => {\n      const movie = await getMovieForLibrary(id);\n      const image = searchPoster(movie);\n      const title = movie.title ? movie.title : movie.name;\n      const movieDate = movie.release_date ? movie.release_date : movie.first_air_date;\n      const year = new Date(movieDate).getFullYear();\n      const rating = movie.vote_average.toFixed(1);\n      const genres = movie.genres[0].name;\n      console.log(genres);\n      return createLibraryMovieTemplateHTML(image, id, title, genres, year, rating);\n    }),\n  );\n  main.innerHTML = moviesList.join('');\n};\n\nconst loadWatchedLibrary = key => {\n  try {\n    const state = localStorage.getItem(key);\n    const array = JSON.parse(state);\n    if (array === null) {\n      return;\n    } else {\n      createLibraryMovieTemplate(array);\n      console.log('array:', array);\n    }\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nloadWatchedLibrary(watchedKey);\n\nwatchedButton.addEventListener('click', () => {\n  loadWatchedLibrary(watchedKey);\n});\n\nqueuedButton.addEventListener('click', () => {\n  loadWatchedLibrary(queueKey);\n});\n"],"names":["$b2d0c946e7dd228e$var$watchedButton","document","querySelector","$b2d0c946e7dd228e$var$queuedButton","$b2d0c946e7dd228e$var$main","$b2d0c946e7dd228e$var$watchedKey","$b2d0c946e7dd228e$var$createLibraryMovieTemplate","async","ids","moviesList","Promise","all","map","id","movie","url","resp","fetch","json","e","console","error","$b2d0c946e7dd228e$var$getMovieForLibrary","image","posterPath","poster_path","backdrop_path","$b2d0c946e7dd228e$var$searchPoster","title","name","movieDate","release_date","first_air_date","year","Date","getFullYear","rating","vote_average","toFixed","genres","log","$b2d0c946e7dd228e$var$createLibraryMovieTemplateHTML","innerHTML","join","$b2d0c946e7dd228e$var$loadWatchedLibrary","key","state","localStorage","getItem","array","JSON","parse","message","addEventListener"],"version":3,"file":"libary.1bc21324.js.map"}