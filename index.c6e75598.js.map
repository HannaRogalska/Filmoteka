{"mappings":"AACA,MAAMA,EAAQC,SAASC,cAAc,uBAC/BC,EAAQF,SAASC,cAAc,iBAErCF,EAAMI,iBAAiB,SAAS,KAC5BD,EAAME,MAAMC,QAAU,UCL1B,MAAMC,EAAON,SAASC,cAAc,QAkE9BM,EAAgBC,MAAMC,IAC1B,IACE,MAAMC,QAAiBC,MACrB,0FAEIC,QAAaF,EAASG,OACtBC,QAAmBF,EAAKG,OAC9B,GAAIN,EAAY,CACd,MAAMO,EAlBY,EAACJ,EAAMH,IACfG,EACXK,QAAOC,GAAKT,EAAWU,SAASD,EAAEE,MAClCC,KAAIH,GACIA,EAAEI,OAcKC,CAAgBT,EAAYL,GAC1C,OAAOO,CACT,CAGF,CAFE,MAAOQ,GACPC,QAAQC,IAAIF,EACd,GAO2BhB,WAC3B,IACE,MAAME,QAAiBC,MAJzB,0FAKQC,QAAaF,EAASG,OA7EAL,OAAMmB,IACpC,MAAMC,QAAmBC,QAAQC,IAC/BH,EAAON,KAAIb,MAAMuB,IACf,MAAMC,EAAQ,sCAAsCD,EAAME,cACpDC,EAAQH,EAAMG,MAAQH,EAAMG,MAAQH,EAAMT,KAC1Ca,EAAYJ,EAAMK,aAAeL,EAAMK,aAAeL,EAAMM,eAC5DC,EAAO,IAAIC,KAAKJ,GAAWK,cAC3BC,EAAmBV,EAAMW,UAE/B,MAlB8B,EAACV,EAAOE,EAAOnB,EAAQuB,IAElD,oEAC4BN,WAAeE,oEACrBA,sDAHXnB,EAAO4B,MAAM,EAAG,GAAGC,KAAK,wBAI6BN,0BAa5DO,CAA4Bb,EAAOE,QADrB3B,EAAckC,GACsBH,EAAA,KAG7DhC,EAAKwC,UAAYlB,EAAWgB,KAAK,KAmE/BG,OAD4BnC,EAAKoC,QAInC,CAFE,MAAOxB,GACPC,QAAQC,IAAIF,EACd,GAGFyB","sources":["src/JS/modal.js","src/JS/movie-template.js"],"sourcesContent":["\nconst close = document.querySelector('.close_modal_window');\nconst modal = document.querySelector('.modal_window');\n\nclose.addEventListener('click', () => {\n    modal.style.display = 'none'\n})\n\n\n","const main = document.querySelector('main');\n\n//TWORZENIE SZABLONU FILMU NA STRONĘ GŁÓWNĄ\nconst createMainMovieTemplateHTML = (image, title, genres, year) => {\n  const twoGenres = genres.slice(0, 2).join(', ');\n  return `<li class=\"movie__template\">\n    <img class=\"movie__image\" src=\"${image}\" alt='${title}' width=\"280px\" height=\"398px\"/> \n    <h5 class=\"movie__title\">${title}</h5>\n    <div class=\"movie__informations\"><span>${twoGenres}</span> | <span>${year}</span></div>\n  </li>`;\n};\n\nconst createMainMovieTemplate = async movies => {\n  const moviesList = await Promise.all(\n    movies.map(async movie => {\n      const image = `https://image.tmdb.org/t/p/original${movie.poster_path}`;\n      const title = movie.title ? movie.title : movie.name;\n      const movieDate = movie.release_date ? movie.release_date : movie.first_air_date;\n      const year = new Date(movieDate).getFullYear();\n      const arrayOfGenresIds = movie.genre_ids;\n      const genres = await getGenresData(arrayOfGenresIds);\n      return createMainMovieTemplateHTML(image, title, genres, year);\n    }),\n  );\n  main.innerHTML = moviesList.join('');\n};\n\n//TWORZENIE SZABLONU FILMU DLA MY LIBRARY\n\n// const createLibraryMovieTemplateHTML = (image, title, genres, year, rating) => {\n//   const twoGenres = genres.slice(0, 2).join(', ');\n//   return `<li class=\"movie__template\">\n//     <img class=\"movie__image\" src=\"${image}\" alt='${title}' width=\"280px\" height=\"398px\"/>\n//     <h5 class=\"movie__title\">${title}</h5>\n//     <div class=\"movie__informations\"><span>${twoGenres}</span> | <span>${year}</span>\n//     <span class=\"movie__rating\">${rating}</span></div>\n//   </li>`;\n// };\n\n// const createLibraryMovieTemplate = async movies => {\n//   const moviesList = await Promise.all(\n//     movies.map(async movie => {\n//       const image = `https://image.tmdb.org/t/p/original${movie.poster_path}`;\n//       const title = movie.title ? movie.title : movie.name;\n//       const movieDate = movie.release_date ? movie.release_date : movie.first_air_date;\n//       const year = new Date(movieDate).getFullYear();\n//       const rating = movie.vote_average.toFixed(1);\n//       const arrayOfGenresIds = movie.genre_ids;\n//       const genres = await getGenresData(arrayOfGenresIds);\n//       return createLibraryMovieTemplateHTML(image, title, genres, year, rating);\n//     }),\n//   );\n//   main.innerHTML = moviesList.join('');\n// };\n\n//SZUKANIE nazwy gatunku filmu po jego ID\nconst searchIdForName = (data, arrayOfIds) => {\n  const names = data\n    .filter(d => arrayOfIds.includes(d.id))\n    .map(d => {\n      return d.name;\n    });\n  return names;\n};\n\n//FETCH listy gatunków filmów (id, name)\nconst getGenresData = async arrayOfIds => {\n  try {\n    const response = await fetch(\n      'https://api.themoviedb.org/3/genre/movie/list?api_key=28f50cf3f177782503c21b43af04c7bc',\n    );\n    const data = await response.json();\n    const genresData = await data.genres;\n    if (arrayOfIds) {\n      const names = searchIdForName(genresData, arrayOfIds);\n      return names;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//FETCH najpopularniejszych na dziś filmów\nconst url =\n  'https://api.themoviedb.org/3/trending/all/day?api_key=28f50cf3f177782503c21b43af04c7bc';\n\nconst getPopularMoviesData = async () => {\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    const popularMovies = await data.results;\n    createMainMovieTemplate(popularMovies);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\ngetPopularMoviesData();\n"],"names":["$52c9fbd2920a6736$var$close","document","querySelector","$52c9fbd2920a6736$var$modal","addEventListener","style","display","$0324c45f15d03b16$var$main","$0324c45f15d03b16$var$getGenresData","async","arrayOfIds","response","fetch","data","json","genresData","genres","names","filter","d","includes","id","map","name","$0324c45f15d03b16$var$searchIdForName","error","console","log","movies","moviesList","Promise","all","movie","image","poster_path","title","movieDate","release_date","first_air_date","year","Date","getFullYear","arrayOfGenresIds","genre_ids","slice","join","$0324c45f15d03b16$var$createMainMovieTemplateHTML","innerHTML","$0324c45f15d03b16$var$createMainMovieTemplate","results","$0324c45f15d03b16$var$getPopularMoviesData"],"version":3,"file":"index.c6e75598.js.map"}